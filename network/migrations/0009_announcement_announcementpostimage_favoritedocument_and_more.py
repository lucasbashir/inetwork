# Generated by Django 4.1.7 on 2023-11-14 14:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('network', '0008_delete_student'),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('poster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcement_poster', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AnnouncementPostImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_image', models.ImageField(blank=True, null=True, upload_to='post_image/')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcement_post_images', to='network.announcement')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ForumPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ForumTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ForumTopicImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_image', models.ImageField(blank=True, null=True, upload_to='post_image/')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forum_topic_post_images', to='network.forumtopic')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(related_name='group_members', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GroupComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=10000)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_userComment', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GroupHaha',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='GroupLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='GroupLove',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='GroupPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postContent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_posts', to='network.group')),
            ],
        ),
        migrations.CreateModel(
            name='GroupPostImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_image', models.ImageField(blank=True, null=True, upload_to='post_image/')),
                ('postContent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_post_images', to='network.grouppost')),
            ],
        ),
        migrations.CreateModel(
            name='GroupSad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_postSad', to='network.grouppost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_userSad', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GroupShare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='GroupShock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_postShock', to='network.grouppost')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_userShock', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoryName', models.CharField(choices=[('Science', 'Science'), ('IT', 'IT'), ('Math', 'Math'), ('Skills and Self-growth', 'Skills and Self-growth'), ('Agriculture', 'Agriculture'), ('Finance', 'Finance'), ('Economics', 'Economics'), ('Philosophy', 'Philosophy'), ('Others', 'Others')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('file', models.FileField(upload_to='library/documents/')),
                ('views', models.PositiveIntegerField(default=0)),
                ('viewers_ip', models.TextField(blank=True)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='network.librarycategory')),
                ('uploader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LibraryImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_image', models.ImageField(blank=True, null=True, upload_to='post_image/')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='libraryimage_set', to='network.librarycategory')),
            ],
        ),
        migrations.CreateModel(
            name='Love',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PostImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_image', models.ImageField(blank=True, null=True, upload_to='post_image/')),
            ],
        ),
        migrations.CreateModel(
            name='Sad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='SharePost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Shock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('file', models.FileField(upload_to='library/videos/')),
                ('views', models.PositiveIntegerField(default=0)),
                ('viewers_ip', models.TextField(blank=True)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='network.librarycategory')),
                ('uploader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RemoveField(
            model_name='laa',
            name='post',
        ),
        migrations.RemoveField(
            model_name='laa',
            name='user',
        ),
        migrations.RemoveField(
            model_name='maashaaallah',
            name='post',
        ),
        migrations.RemoveField(
            model_name='maashaaallah',
            name='user',
        ),
        migrations.RemoveField(
            model_name='subhanallah',
            name='post',
        ),
        migrations.RemoveField(
            model_name='subhanallah',
            name='user',
        ),
        migrations.RemoveField(
            model_name='post',
            name='post_image',
        ),
        migrations.DeleteModel(
            name='Allahu_akbar',
        ),
        migrations.DeleteModel(
            name='Laa',
        ),
        migrations.DeleteModel(
            name='MaaShaaAllah',
        ),
        migrations.DeleteModel(
            name='Subhanallah',
        ),
        migrations.AddField(
            model_name='shock',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postShock', to='network.post'),
        ),
        migrations.AddField(
            model_name='shock',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userShock', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sharepost',
            name='shared_post',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='network.post'),
        ),
        migrations.AddField(
            model_name='sharepost',
            name='shared_to',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sharepost',
            name='sharer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shared_posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='sad',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postSad', to='network.post'),
        ),
        migrations.AddField(
            model_name='sad',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userSad', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='postimage',
            name='postContent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_images', to='network.post'),
        ),
        migrations.AddField(
            model_name='love',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='postLove', to='network.post'),
        ),
        migrations.AddField(
            model_name='love',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userLove', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='groupshare',
            name='shared_post',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='network.post'),
        ),
        migrations.AddField(
            model_name='groupshare',
            name='shared_to',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='network.group'),
        ),
        migrations.AddField(
            model_name='groupshare',
            name='sharer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_share', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='grouppost',
            name='groupshare',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='network.groupshare'),
        ),
        migrations.AddField(
            model_name='grouppost',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_post_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='grouplove',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_postLove', to='network.grouppost'),
        ),
        migrations.AddField(
            model_name='grouplove',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_userLove', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='grouplike',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_post_like', to='network.grouppost'),
        ),
        migrations.AddField(
            model_name='grouplike',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_user_like', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='grouphaha',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_postHaha', to='network.grouppost'),
        ),
        migrations.AddField(
            model_name='grouphaha',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_userHaha', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='groupcomment',
            name='post',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='group_postComment', to='network.grouppost'),
        ),
        migrations.AddField(
            model_name='forumpost',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='network.forumtopic'),
        ),
        migrations.AddField(
            model_name='favoritevideo',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network.video'),
        ),
        migrations.AddField(
            model_name='favoritedocument',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network.librarydocument'),
        ),
        migrations.AddField(
            model_name='favoritedocument',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
